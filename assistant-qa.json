<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AI Assistant - Odisha e-Guru</title>
    <style>
* {
    box-sizing: border-box;
}

body, h1, h2, h3, h4, p, ul, li {
    margin: 0;
    padding: 0;
}

html, body {
    margin: 0;
    padding: 0;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    min-height: 100vh;
    width: 100%;
    overflow-x: hidden;
}

.container {
    background: white;
    max-width: 100%;
    width: 100%;
    min-height: 100vh;
    overflow-x: hidden;
    padding: 0;
    margin: 0;
}

.header {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    padding: 25px 20px;
    text-align: center;
    margin: 0;
    position: relative;
    overflow: hidden;
}

.header::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 70%);
    animation: pulse 4s ease-in-out infinite;
}

@keyframes pulse {
    0%, 100% { transform: scale(1); opacity: 0.5; }
    50% { transform: scale(1.1); opacity: 0.8; }
}

.header h1 {
    font-size: 26px;
    margin-bottom: 8px;
    text-shadow: 2px 2px 4px rgba(0,0,0,0.2);
    position: relative;
    z-index: 1;
}

.header p {
    font-size: 14px;
    opacity: 0.95;
    margin: 0;
    position: relative;
    z-index: 1;
}

.assistant-image {
    width: 140px;
    height: 140px;
    margin: 15px auto 0 !important;
    display: block;
    border-radius: 50%;
    border: 4px solid white;
    box-shadow: 0 8px 30px rgba(0,0,0,0.3);
    position: relative;
    z-index: 1;
    animation: float 3s ease-in-out infinite;
}

@keyframes float {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-10px); }
}

.assistant-section {
    padding: 20px 0 30px 0;
}

.input-container {
    background: linear-gradient(135deg, #f0f8ff 0%, #e6f2ff 100%);
    border-radius: 0;
    padding: 20px 0;
    margin: 0;
    box-shadow: none;
}

.input-label {
    color: #667eea;
    font-weight: bold;
    margin: 0 15px 12px 15px;
    display: block;
    font-size: 15px;
}

.assistant-input {
    width: calc(100% - 30px);
    padding: 30px;
    border: 2px solid #667eea;
    border-radius: 12px;
    font-size: 17px;
    resize: vertical;
    min-height: 120px;
    font-family: inherit;
    transition: all 0.3s ease;
    margin: 0 15px;
    background: white;
}

.assistant-input:focus {
    outline: none;
    border-color: #764ba2;
    box-shadow: 0 0 0 4px rgba(118, 75, 162, 0.15);
}

.send-btn {
    background: linear-gradient(135deg, #4CAF50, #45a049);
    color: white;
    border: none;
    padding: 15px 35px;
    border-radius: 30px;
    font-size: 15px;
    cursor: pointer;
    font-weight: 700;
    transition: all 0.3s ease;
    width: calc(100% - 30px);
    margin: 15px 15px 0 15px;
    box-shadow: 0 5px 18px rgba(76, 175, 80, 0.4);
}

.send-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 7px 22px rgba(76, 175, 80, 0.5);
}

.response-container {
    background: linear-gradient(135deg, #ffffff 0%, #f5f7fa 100%);
    border-radius: 0;
    padding: 5px 0;
    margin-top: 0;
    display: none;
    animation: fadeIn 0.5s ease;
    box-shadow: none;
}

.response-container.show {
    display: block;
}

.play-stop-btn {
    background: linear-gradient(135deg, #FF6B6B, #FF8E53);
    color: white;
    border: none;
    padding: 12px 24px;
    border-radius: 25px;
    font-size: 14px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    gap: 8px;
    box-shadow: 0 4px 15px rgba(255, 107, 107, 0.4);
    margin: 0 auto;
}

.play-stop-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(255, 107, 107, 0.5);
}

.play-stop-btn.playing {
    background: linear-gradient(135deg, #f44336, #d32f2f);
    animation: blink 1s infinite;
}

@keyframes blink {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.7; }
}

@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

#background-audio {
    position: fixed;
    top: -9999px;
    left: -9999px;
    opacity: 0;
    pointer-events: none;
}

@media (min-width: 769px) {
    .container {
        max-width: 100%;
        margin: 0 auto;
    }
    
    .header {
        padding: 35px 30px;
    }
    
    .header h1 {
        font-size: 32px;
    }
    
    .assistant-section {
        padding: 30px 30px 40px;
        max-width: 900px;
        margin: 0 auto;
    }
    
    .assistant-image {
        width: 180px;
        height: 180px;
    }
}

@media (max-width: 768px) {
    .header {
        padding: 20px 15px;
    }
    
    .header h1 {
        font-size: 22px;
        margin-bottom: 8px;
    }
    
    .header p {
        font-size: 13px;
    }
    
    .assistant-image {
        width: 120px;
        height: 120px;
        margin: 15px auto 0;
    }
    
    .assistant-section {
        padding: 15px 0 25px 0;
    }
    
    .input-container,
    .response-container {
        border-radius: 0;
        padding: 20px 0;
        margin: 0;
    }
    
    .assistant-input {
        padding: 20px;
        font-size: 17px;
        min-height: 110px;
    }
    
    .send-btn {
        padding: 12px 25px;
        font-size: 14px;
        margin-top: 12px;
    }
}

@media (max-width: 400px) {
    .header h1 {
        font-size: 20px;
    }
    
    .assistant-image {
        width: 100px;
        height: 100px;
    }

    .assistant-input {
        padding: 20px;
        font-size: 17px;
        min-height: 110px;
    }
}
    </style>
</head>
<body>
<audio id="background-audio" preload="auto"></audio>

    <div class="container">
        <div class="header">
            <h1>🎓 Odisha e-Guru Assistant</h1>
            <p>(Your assistant for learning BNSS Section-1)</p>
            <img src="https://raw.githubusercontent.com/eguruOdisha/legal-support-services/main/Gif%2BGB%20(2).gif" 
                 alt="AI Assistant" 
                 class="assistant-image">
        </div>

        <div class="assistant-section">
            <div class="input-container">
                <label class="input-label">💬 Ask Your Question About BNSS Section-1:</label>
                
                <textarea class="assistant-input" 
                          id="assistantInput" 
                          placeholder="Ask anything about BNSS Section-1 Subsection 1 (e.g., 'What is the law's name?', 'Explain concept 1', 'Tell me about English translation')..."
                          onkeypress="if(event.key === 'Enter' && event.shiftKey) { event.preventDefault(); sendQuery(); }"></textarea>
                
                <button class="send-btn" onclick="sendQuery()">
                    Send Question ➤
                </button>
            </div>

            <div class="response-container" id="responseContainer"></div>
        </div>
    </div>

<script>
let wakeLock = null;
let backgroundAudioInterval = null;

// The knowledge base - your BNSS content
const knowledgeBase = {
    content: `Concept with Example - Subsection 1:

Concept 1: Law's Name (कानून का नाम)
This law is called the 'Bharatiya Nagarik Suraksha Sanhita, 2023'.
यह कानून 'भारतीय नागरिक सुरक्षा संहिता, 2023' कहलाता है।
• Example (उदाहरण): Just like your name is Raj or Priya, this law's name is BNSS, 2023.
जैसे आपका नाम राज या प्रिया है, वैसे ही इस कानून का नाम BNSS, 2023 है।

Concept 2: English Translation (अंग्रेजी अनुवाद)
In English, it means 'Indian Citizen Security Code, 2023'.
अंग्रेजी में, इसका अर्थ है 'इंडियन सिटीजन सिक्योरिटी कोड, 2023'।
• Example (उदाहरण): Like 'Vidyalaya' means 'School' in English, BNSS means 'Indian Citizen Security Code'.
जैसे 'विद्यालय' का अंग्रेजी में मतलब 'स्कूल' होता है, वैसे ही BNSS का मतलब 'इंडियन सिटीजन सिक्योरिटी कोड' है।`,
    
    // Extract only English text for display
    getEnglishText: function() {
        return this.content
            .split('\n')
            .filter(line => !line.match(/[ा-ॿ]/)) // Remove lines with Hindi characters
            .join('\n')
            .replace(/\(.*?\)/g, '') // Remove parenthetical translations
            .trim();
    },
    
    // Extract ONLY Hindi text for TTS
    getHindiText: function() {
        const lines = this.content.split('\n');
        let hindiText = '';
        
        for (let line of lines) {
            // Check if line contains Hindi characters
            if (line.match(/[ा-ॿ]/)) {
                // Extract only the Hindi part (remove English)
                const hindiMatch = line.match(/[ा-ॿ][^a-zA-Z]*/g);
                if (hindiMatch) {
                    hindiText += hindiMatch.join(' ') + ' ';
                }
            }
        }
        
        return hindiText.trim();
    }
};

function sendQuery() {
    try {
        const inputElement = document.getElementById('assistantInput');
        const query = inputElement.value.trim();
        
        if (!query) {
            alert('⚠️ Please write your question first.');
            return;
        }
        
        inputElement.value = '';
        
        const container = document.getElementById('responseContainer');
        container.classList.add('show');
        container.innerHTML = '<div style="text-align: center; padding: 40px; color: #667eea;"><h3>🔍 Processing your question...</h3></div>';
        
        setTimeout(() => {
            container.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
        }, 100);
        
        // Display answer after a short delay for UX
        setTimeout(() => {
            displayAnswer();
        }, 1000);
        
    } catch (error) {
        console.error('❌ Error in sendQuery:', error);
        alert('Error: ' + error.message);
    }
}

function displayAnswer() {
    const container = document.getElementById('responseContainer');
    
    // Get English-only text for display
    const displayText = knowledgeBase.getEnglishText();
    
    // Format the text with HTML
    const formattedText = displayText
        .replace(/Concept \d+:/g, '<br><br><strong>$&</strong>')
        .replace(/• Example:/g, '<br>• <strong>Example:</strong>')
        .replace(/\n/g, '<br>');
    
    const answerId = 'answer-text-' + Date.now();
    
    container.innerHTML = `
        <div style="background: white; border-radius: 10px; padding: 20px; margin: 15px; box-shadow: 0 3px 15px rgba(0,0,0,0.1);">
            <div style="color: #667eea; font-weight: bold; font-size: 16px; margin-bottom: 15px; padding-bottom: 10px; border-bottom: 2px solid #667eea;">
                📝 BNSS Section-1, Subsection 1:
            </div>
            <div id="typewriterText" style="color: #000; font-size: 15px; line-height: 1.8; text-align: justify;">
            </div>
            
            <div id="${answerId}" style="display: none;">${knowledgeBase.getHindiText()}</div>
            
            <div style="margin-top: 20px; text-align: center; padding-top: 15px; border-top: 1px solid #e0e0e0;">
                <button id="hindiTTSBtn" onclick="toggleHindiTTS()" class="play-stop-btn">
                    <span style="font-size: 18px;">🔊</span> Read Aloud in Hindi
                </button>
            </div>
        </div>
    `;
    
    // Store ONLY Hindi text for TTS
    window.currentAnswerText = knowledgeBase.getHindiText();
    window.isHindiTTSPlaying = false;
    
    // Typewriter effect for display text
    const textElement = document.getElementById('typewriterText');
    let index = 0;
    
    function typeWriter() {
        if (index < formattedText.length) {
            textElement.innerHTML = formattedText.substring(0, index + 1);
            index++;
            setTimeout(typeWriter, 15);
        }
    }
    typeWriter();
}

function startHindiTTS() {
    console.log('🔊 Starting Hindi TTS');
    
    if (!('speechSynthesis' in window)) {
        alert('❌ Text-to-speech not supported in your browser');
        return;
    }
    
    let text = window.currentAnswerText || '';
    if (!text || text.trim() === '') {
        console.log('❌ No text available');
        return;
    }
    
    requestWakeLock();
    enableBackgroundAudio();
    
    window.speechSynthesis.cancel();
    
    setTimeout(() => {
        // Clean the text for TTS
        let cleanText = text
            .replace(/<br\s*\/?>/gi, ' ')
            .replace(/<\/p>/gi, '. ')
            .replace(/<p[^>]*>/gi, '')
            .replace(/<\/?[^>]+>/gi, ' ')
            .replace(/&nbsp;/g, ' ')
            .replace(/&amp;/g, '&')
            .replace(/\s+/g, ' ')
            .trim();
        
        const btn = document.getElementById('hindiTTSBtn');
        
        const utterance = new SpeechSynthesisUtterance(cleanText);
        utterance.lang = 'hi-IN';
        utterance.rate = 0.85;
        utterance.pitch = 1.0;
        utterance.volume = 1.0;
        
        const voices = window.speechSynthesis.getVoices();
        const hindiVoice = voices.find(v => 
            v.lang === 'hi-IN' || 
            v.lang === 'hi' || 
            v.lang.startsWith('hi-') ||
            v.name.toLowerCase().includes('hindi')
        );
        
        if (hindiVoice) {
            utterance.voice = hindiVoice;
            console.log('✅ Using Hindi voice:', hindiVoice.name);
        } else {
            console.log('⚠️ No Hindi voice found, using default');
        }
        
        utterance.onstart = () => {
            console.log('✅ TTS STARTED');
            window.isHindiTTSPlaying = true;
            keepSpeechAlive();
            if (btn) {
                btn.innerHTML = '<span style="font-size: 18px;">⏸️</span> Stop Reading';
                btn.classList.add('playing');
            }
        };
        
        utterance.onend = () => {
            console.log('✅ TTS ENDED');
            window.isHindiTTSPlaying = false;
            releaseWakeLock();
            stopBackgroundAudio();
            if (btn) {
                btn.innerHTML = '<span style="font-size: 18px;">🔊</span> Read Aloud in Hindi';
                btn.classList.remove('playing');
            }
        };
        
        utterance.onerror = (event) => {
            console.error('❌ TTS ERROR:', event.error);
            window.isHindiTTSPlaying = false;
            releaseWakeLock();
            stopBackgroundAudio();
            if (btn) {
                btn.innerHTML = '<span style="font-size: 18px;">🔊</span> Read Aloud in Hindi';
                btn.classList.remove('playing');
            }
        };
        
        window.currentUtterance = utterance;
        
        console.log('🎬 Starting speech...');
        window.speechSynthesis.speak(utterance);
        
    }, 200);
}

function toggleHindiTTS() {
    console.log('🔘 Toggle TTS clicked, current state:', window.isHindiTTSPlaying);
    
    if (window.isHindiTTSPlaying) {
        stopHindiTTS();
    } else {
        startHindiTTS();
    }
}

function stopHindiTTS() {
    console.log('⏸️ Stopping Hindi TTS');
    window.speechSynthesis.cancel();
    window.isHindiTTSPlaying = false;
    
    releaseWakeLock();
    stopBackgroundAudio();
    
    const btn = document.getElementById('hindiTTSBtn');
    if (btn) {
        btn.innerHTML = '<span style="font-size: 18px;">🔊</span> Read Aloud in Hindi';
        btn.classList.remove('playing');
    }
}

async function requestWakeLock() {
    try {
        if ('wakeLock' in navigator) {
            wakeLock = await navigator.wakeLock.request('screen');
            console.log('✅ Wake Lock activated');
            
            wakeLock.addEventListener('release', () => {
                console.log('🔓 Wake Lock released');
            });
        }
    } catch (err) {
        console.error('❌ Wake Lock error:', err);
    }
}

function releaseWakeLock() {
    if (wakeLock !== null) {
        wakeLock.release()
            .then(() => {
                wakeLock = null;
                console.log('✅ Wake Lock released manually');
            });
    }
}

function enableBackgroundAudio() {
    const audioElement = document.getElementById('background-audio');
    
    if (!audioElement) return;
    
    const silentAudio = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';
    
    audioElement.src = silentAudio;
    audioElement.loop = true;
    audioElement.volume = 0.01;
    
    audioElement.play().catch(err => {
        console.error('❌ Background audio error:', err);
    });
    
    backgroundAudioInterval = setInterval(() => {
        if (window.isHindiTTSPlaying && window.speechSynthesis.paused) {
            console.log('🔄 Resuming speech synthesis');
            window.speechSynthesis.resume();
        }
    }, 5000);
}

function stopBackgroundAudio() {
    const audioElement = document.getElementById('background-audio');
    
    if (audioElement) {
        audioElement.pause();
        audioElement.currentTime = 0;
    }
    
    if (backgroundAudioInterval) {
        clearInterval(backgroundAudioInterval);
        backgroundAudioInterval = null;
    }
}

function keepSpeechAlive() {
    document.addEventListener('visibilitychange', handleVisibilityChange);
    window.addEventListener('focus', handlePageFocus);
}

function handleVisibilityChange() {
    if (document.hidden && window.isHindiTTSPlaying) {
        console.log('📱 Page hidden, keeping speech alive');
        setTimeout(() => {
            if (window.speechSynthesis.paused) {
                window.speechSynthesis.resume();
            }
        }, 100);
    }
}

function handlePageFocus() {
    if (window.isHindiTTSPlaying && window.speechSynthesis.paused) {
        console.log('🔄 Page focused, resuming speech');
        window.speechSynthesis.resume();
    }
}

document.addEventListener('visibilitychange', async () => {
    if (!document.hidden && window.isHindiTTSPlaying) {
        await requestWakeLock();
    }
});

window.addEventListener('load', function() {
    console.log('🔊 Initializing speech synthesis...');
    
    if ('speechSynthesis' in window) {
        const loadVoices = () => {
            const voices = window.speechSynthesis.getVoices();
            console.log('✅ Speech voices loaded:', voices.length);
            
            if (voices.length > 0) {
                const hindiVoices = voices.filter(v => 
                    v.lang.startsWith('hi') || v.name.toLowerCase().includes('hindi')
                );
                console.log('🇮🇳 Hindi voices available:', hindiVoices.length);
            }
        };
        
        loadVoices();
        window.speechSynthesis.onvoiceschanged = loadVoices;
        setTimeout(loadVoices, 100);
    }
    
    document.addEventListener('touchstart', function() {
        const audioContext = new (window.AudioContext || window.webkitAudioContext)();
        audioContext.resume();
    }, { once: true });
});
</script>

</body>
</html>
